# Generated by Django 4.2.10 on 2024-02-25 23:55

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('single', 'Single Room'), ('double', 'Double Room'), ('suite', 'Suite Room'), ('delux', 'Delux Room')], help_text='Select the type of room.', max_length=10)),
                ('description', models.TextField(help_text='Provide a description of the room.')),
                ('occupancy', models.PositiveIntegerField(help_text='Specify the maximum number of guests allowed in the room.')),
                ('availability', models.BooleanField(default=True, help_text='Indicate if the room is currently available for booking.')),
                ('price', models.DecimalField(decimal_places=2, help_text='Enter the price per night for the room.', max_digits=10)),
                ('no_of_bed', models.PositiveBigIntegerField(help_text='Specify number of Beds', null=True)),
                ('no_of_bath', models.PositiveBigIntegerField(help_text='Specify number of Baths', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phoneNumber', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(related_name='person_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='person_user_permissions', to='auth.permission')),
            ],
            options={
                'db_table': 'hms_main_person',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BookRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_id', models.UUIDField(default=uuid.uuid4)),
                ('date_booked', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hms_main.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hms_main.person')),
            ],
        ),
    ]
